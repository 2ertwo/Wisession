# Generated by Django 2.1.15 on 2023-02-06 09:54

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='企业号')),
                ('company_name', models.CharField(max_length=32, verbose_name='企业名')),
                ('password', models.CharField(max_length=60, verbose_name='密码')),
                ('type', models.IntegerField(choices=[(1, '学校'), (2, '政府'), (3, '企业'), (4, '其他')], verbose_name='企业类型')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('icon', models.ImageField(default='default.jpg', upload_to='', verbose_name='企业图标')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2023, 2, 6, 9, 54, 48, 253980, tzinfo=utc), verbose_name='加入时间')),
            ],
        ),
        migrations.CreateModel(
            name='Dialog',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('by_user', models.BooleanField()),
                ('text', models.TextField()),
                ('create_time', models.DateTimeField(default=datetime.datetime(2023, 2, 6, 9, 54, 48, 255933, tzinfo=utc), verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('create_time', models.DateTimeField(default=datetime.datetime(2023, 2, 6, 9, 54, 48, 255573, tzinfo=utc), verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('create_time', models.BigIntegerField(default=1675677288, verbose_name='请求时间')),
                ('random_str', models.CharField(max_length=60, verbose_name='链接随机字符')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAndAnswer',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('deployed', models.BooleanField(default=False, verbose_name='是否已部署')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceInfo',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='服务号')),
                ('service_name', models.CharField(max_length=32, verbose_name='服务名')),
                ('describe', models.TextField(verbose_name='描述')),
                ('type', models.IntegerField(choices=[(1, '智能文档问答'), (2, '外部接口问答')], verbose_name='类型')),
                ('icon', models.ImageField(default='default.jpg', upload_to='', verbose_name='图标')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2023, 2, 6, 9, 54, 48, 254427, tzinfo=utc), verbose_name='创建时间')),
                ('target_url', models.CharField(default='http://', max_length=200, verbose_name='目标url')),
                ('url_token', models.CharField(default='secret', max_length=60, verbose_name='密钥')),
                ('belong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.CompanyInfo', verbose_name='所属企业')),
            ],
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.ServiceInfo')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='用户号')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=60, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('gender', models.IntegerField(choices=[(1, '男'), (2, '女'), (3, '未知')], default=3, verbose_name='性别')),
                ('describe', models.TextField(verbose_name='自我介绍')),
                ('icon', models.ImageField(default='default.jpg', upload_to='', verbose_name='头像')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2023, 2, 6, 9, 54, 48, 253343, tzinfo=utc), verbose_name='加入时间')),
            ],
        ),
        migrations.AddField(
            model_name='subscribe',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserInfo'),
        ),
        migrations.AddField(
            model_name='questionandanswer',
            name='belong',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.ServiceInfo', verbose_name='所属服务'),
        ),
        migrations.AddField(
            model_name='notice',
            name='from_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.ServiceInfo'),
        ),
        migrations.AddField(
            model_name='dialog',
            name='service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.ServiceInfo'),
        ),
        migrations.AddField(
            model_name='dialog',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserInfo'),
        ),
    ]
